c
id
arguments
cart
@cart
cart
ids
id
params
c
CartItem.find(params[:id]).cart.user
CartItem.find(params[:id]).cart
CartItem.find(params[:id]).cart.user
CartItem.find(params[:id]).cart
CartItem.find(params[:id])
CartItem.find(params[:id]).user
params
Cart.user_id
CartItem.find(params[:id])
Cart.find(params[:id])
Cart.find(params[:id]
params
c
CartItem.find(params[:id]).cart
CartItem.find(params[:id])
Cart.find(params[:id])
params
c
newps[:cart_id]
current_cart_copy.id
current_cart_copy.id==newps[:cart_id]
current_cart_copy
current_cart
c
@current_cart
current_cart
c
n
c
cart.cart_items.each {|cart_item| subtotal_prize=subtotal_prizec + cart_item.total_price_item }
cart.cart_items.each {|cart_item| subtotal_prize=subtotal_prize + cart_item.total_price_item }
cart.cart_items.each {|cart_item| subtotal_prize=subtotal_prize+cart_item.total_price_item }
cart.cart_items.each do |cart_item|
cart.cart_items.length
cart.cart_items.count
cart
n
c
n
c
back
b
n
c
hi.each {|hie| puts "1"}
hi.each do {|hie| puts "1"}
hi.each do 
hi=cart.cart_items
hi=cart.cart_items.second.total_price_item
hi+yo
yo=100
hi+yo
hi=cart.cart_items.first.total_price_item
yo=0
10+cart.cart_items.first.total_price_item
cart.cart_items.first.total_price_item
cart.cart_items.first.total_price
cart.cart_items.first.tota
cart.cart_items.first
cart.cart_items
cart.cart_item
cart
n
cart_id
c
n
current_cart.id
current_cart
c
current_cart
ca_rt
cart
c
~c
c
n
nn
n
nn
n
c
Cart.where(user_id:current_user.id)
current_user.id
current_cart
n
c
ca_rt
n
c
current_user
params
